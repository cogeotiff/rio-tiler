[project]
name = "rio-tiler"
description = "User friendly Rasterio plugin to read raster datasets."
readme = "README.md"
requires-python = ">=3.8"
license = {file = "LICENSE"}
authors = [
    {name = "Vincent Sarago", email = "vincent@developmentseed.com"},
]
keywords = ["COGEO", "Cloud Optimized Geotiff", "rasterio", "slippy-map", "STAC"]
classifiers = [
    "Intended Audience :: Information Technology",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: BSD License",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: GIS",
]
dynamic = ["version"]
dependencies = [
    "attrs",
    "cachetools",
    "httpx",
    "numexpr",
    "numpy",
    "morecantile>=5.0,<7.0",
    "pydantic~=2.0",
    "pystac>=0.5.4",
    "rasterio>=1.3.0",
    "color-operations",
    "typing-extensions",
    "importlib_resources>=1.1.0; python_version < '3.9'",
]

[project.optional-dependencies]
test = [
    "pytest",
    "pytest-cov",

    # XarrayReader
    "xarray",
    "rioxarray",
    # S3
    "boto3",
    # Some tests will fail with 5.0
    "morecantile>=6.0,<7.0",
]

benchmark = [
    "pytest",
    "pytest-benchmark",
]

tilebench = [
    "pytest",
    "tilebench",
]

dev = [
    "pre-commit",
    "bump-my-version",
]
s3 = [
    "boto3",
]
xarray = [
    "xarray",
    "rioxarray",
]
docs = [
    "mkdocs>=1.4.3",
    "mkdocs-jupyter>=0.24.5",
    "mkdocs-material[imaging]>=9.5",
    "griffe-inherited-docstrings>=1.0.0",
    "mkdocstrings[python]>=0.25.1",
    "pygments",
]

[project.urls]
Homepage = 'https://cogeotiff.github.io/rio-tiler/'
Documentation = "https://cogeotiff.github.io/rio-tiler/"
Issues = "https://github.com/cogeotiff/rio-tiler/issues"
Source = "https://github.com/cogeotiff/rio-tiler"
Changelog = "https://cogeotiff.github.io/rio-tiler/release-notes/"


[tool.hatch.version]
path = "rio_tiler/__init__.py"

[tool.hatch.build.targets.sdist]
exclude = [
  "/tests",
  "/docs",
  ".github",
  ".history",
  ".bumpversion.cfg",
  ".flake8",
  ".gitignore",
  ".pre-commit-config.yaml",
  "AUTHORS.txt",
  "CHANGES.md",
  "CONTRIBUTING.md",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.coverage.run]
branch = true
parallel = true

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]

[tool.isort]
profile = "black"
known_first_party = ["rio_tiler"]
known_third_party = [
    "rasterio",
    "morecantile",
    "affine",
    "pystac",
]
default_section = "THIRDPARTY"

[tool.mypy]
no_strict_optional = true

[tool.ruff]
line-length = 90

[tool.ruff.lint]
select = [
    "D1",  # pydocstyle errors
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # flake8
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "B905",  # ignore zip() without an explicit strict= parameter, only support with python >3.10
    "B028",
]

[tool.ruff.lint.mccabe]
max-complexity = 14

[tool.bumpversion]
current_version = "7.0.0"
search = "{current_version}"
replace = "{new_version}"
regex = false
tag = true
commit = true
tag_name = "{new_version}"

[[tool.bumpversion.files]]
filename = "rio_tiler/__init__.py"
search = '__version__ = "{current_version}"'
replace = '__version__ = "{new_version}"'
